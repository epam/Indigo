name: Indigo CI

on:
  push:
    branches:
      - master
    tags:
      - 'indigo-*'
  workflow_dispatch:
  pull_request:

jobs:
  build_linux:
    runs-on: ubuntu-latest
    container: epmlsop/buildpack-centos7:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 500
      - name: Git fetch tags
        run: git fetch --tags
      - name: Build native libs
        run: python build_scripts/indigo-release-libs.py
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: indigo-libs-linux
          path: dist/indigo-libs-*.zip
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 500
      - name: Git fetch tags
        run: git fetch --tags
      - name: Build native libs
        run: python build_scripts/indigo-release-libs.py
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: indigo-libs-windows
          path: dist/indigo-libs-*.zip
  build_macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 500
      - name: Git fetch tags
        run: git fetch --tags
      - name: Build native libs
        run: python build_scripts/indigo-release-libs.py --preset=mac-universal
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: indigo-libs-macos
          path: dist/indigo-libs-*.zip
  build_wrappers:
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows, build_macos]
    container: epmlsop/indigo-tester:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 500
      - name: Git fetch tags
        run: git fetch --tags
      - name: Create folder for native libs
        run: mkdir dist
      - name: Download Linux native libs
        uses: actions/download-artifact@v2
        with:
          name: indigo-libs-linux
          path: dist/
      - name: Download Windows native libs
        uses: actions/download-artifact@v2
        with:
          name: indigo-libs-windows
          path: dist/
      - name: Download macOS native libs
        uses: actions/download-artifact@v2
        with:
          name: indigo-libs-macos
          path: dist/
      - name: Update Wrappers version
        run: python3 build_scripts/indigo-update-version.py
      - name: Build Python wrappers
        run: python3 build_scripts/indigo-make-by-libs.py --type=python --wrappers-arch=universal
      - name: Build Java wrapers
        run: python3 build_scripts/indigo-make-by-libs.py --type=java --wrappers-arch=universal
      - name: Build .NET wrapers
        run: python3 build_scripts/indigo-make-by-libs.py --type=dotnet --wrappers-arch=universal
      - name: Upload native shared libs
        uses: actions/upload-artifact@v2
        with:
          name: indigo-native-shared-libs
          path: |
            dist/indigo-libs-*-win-shared.zip
            dist/indigo-libs-*-linux-shared.zip
            dist/indigo-libs-*-mac-shared.zip
      - name: Upload test wrappers for Python
        uses: actions/upload-artifact@v2
        with:
          name: indigo-test-wrappers-python
          path: dist/indigo-python-*.zip
      - name: Upload test wrappers for Java
        uses: actions/upload-artifact@v2
        with:
          name: indigo-test-wrappers-java
          path: dist/indigo-java-*.zip
      - name: Upload test wrappers for .NET
        uses: actions/upload-artifact@v2
        with:
          name: indigo-test-wrappers-dotnet
          path: dist/indigo-dotnet-*.zip
  test_linux_python:
    runs-on: ubuntu-latest
    needs: build_wrappers
    container: epmlsop/indigo-tester:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 500
      - name: Git fetch tags
        run: git fetch --tags
      - name: Create folder for native libs
        run: mkdir dist
      - name: Download wrappers
        uses: actions/download-artifact@v2
        with:
          name: indigo-test-wrappers-python
          path: dist/
      - name: Test
        run: python3 api/tests/python/test.py -j junit_report.xml -e todo || true
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v1
        with:
          report_paths: 'junit_report.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: "Linux Python Test Report"
  test_linux_java:
    runs-on: ubuntu-latest
    needs: build_wrappers
    container: epmlsop/indigo-tester:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 500
      - name: Git fetch tags
        run: git fetch --tags
      - name: Create folder for native libs
        run: mkdir dist
      - name: Download wrappers
        uses: actions/download-artifact@v2
        with:
          name: indigo-test-wrappers-java
          path: dist/
      - name: Test
        run: jython api/tests/python/test.py -j junit_report.xml -e todo || true
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v1
        with:
          report_paths: 'junit_report.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: "Linux Java Test Report"
  test_linux_dotnet:
    runs-on: ubuntu-latest
    needs: build_wrappers
    container: epmlsop/indigo-tester:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 500
      - name: Git fetch tags
        run: git fetch --tags
      - name: Create folder for native libs
        run: mkdir dist
      - name: Download wrappers
        uses: actions/download-artifact@v2
        with:
          name: indigo-test-wrappers-dotnet
          path: dist/
      - name: Test
        run: ipy -X:ExceptionDetail api/tests/python/test.py -j junit_report.xml -e todo || true
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v1
        with:
          report_paths: 'junit_report.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: "Linux .NET Test Report"
  test_windows_python:
    runs-on: windows-latest
    needs: build_wrappers
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 500
      - name: Git fetch tags
        run: git fetch --tags
      - name: Create folder for native libs
        run: mkdir dist
      - name: Download wrappers
        uses: actions/download-artifact@v2
        with:
          name: indigo-test-wrappers-python
          path: dist/
      - name: Test
        run: python api/tests/python/test.py -j junit_report.xml -e todo || true
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v1
        with:
          report_paths: 'junit_report.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: "Windows Python Test Report"
  test_macos_python:
    runs-on: macos-latest
    needs: build_wrappers
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 500
      - name: Git fetch tags
        run: git fetch --tags
      - name: Create folder for native libs
        run: mkdir dist
      - name: Download wrappers
        uses: actions/download-artifact@v2
        with:
          name: indigo-test-wrappers-python
          path: dist/
      - name: Test
        run: python api/tests/python/test.py -j junit_report.xml -e todo || true
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v1
        with:
          report_paths: 'junit_report.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: "macOS Python Test Report"
  publish:
    if: startsWith(github.ref, 'refs/tags/indigo-')
    runs-on: ubuntu-latest
    needs: [test_linux_python, test_linux_java, test_linux_dotnet, test_windows_python, test_macos_python]
    container: epmlsop/indigo-tester:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 500
      - name: Git fetch tags
        run: git fetch --tags
      - name: Create folder for native libs
        run: mkdir dist
      - name: Download native shared libraries
        uses: actions/download-artifact@v2
        with:
          name: indigo-native-shared-libs
          path: dist/
      - name: Update Wrappers version
        run: python3 build_scripts/indigo-update-version.py
      - name: Publish Python wheels to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: python3 build_scripts/indigo-make-by-libs.py --type=python --wrappers-arch=universal --publish
      - name: Publish Java jars to Maven Central
        env:
          MAVEN_SETTINGS: ${{ secrets.MAVEN_SETTINGS }}
          MAVEN_USER: ${{ secrets.MAVEN_USER }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          GPG_PRIVATE_KEY: ${{ secrets.MK_GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.MK_GPG_PASSPHRASE }}
        run: |
          echo ${MAVEN_SETTINGS} > ~/.m2/settings.xml
          echo ${GPG_PRIVATE_KEY} > gpg.key
          gpg --import gpg.key
          rm gpg.key
          python3 build_scripts/indigo-make-by-libs.py --type=java --wrappers-arch=universal --publish
      - name: Publish .NET nupkg to Nuget
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: python3 build_scripts/indigo-make-by-libs.py --type=dotnet --wrappers-arch=universal --publish
